=begin
The four adjacent digits in the 1000-digit number that have the greatest 
product are 9 × 9 × 8 × 9 = 5832.
Find the greatest product of thirteen consecutive digits in the 100-digit 
number.

=end

require "set"

def prod_in_series(consec, series)
  series_arr = series.to_s.split("").map { |x| x.to_i }
  max_prod = 0
  first = 0
  last = consec - 1
  
  while last < series_arr.length
    prod = series_arr[first..last].inject(1) { |prod, x| prod *= x }
    max_prod = prod if prod > max_prod
    first += 1
    last += 1
  end
  
  max_prod
end


